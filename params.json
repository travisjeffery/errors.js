{"name":"Errors.js","body":"The future of the web is asynchronous and client side computation is steadily becoming more\r\nsophisticated and well practiced.\r\n\r\nerrors.js provides an Errors object similar to ActiveModel's Errors object to\r\nprovide a simple, ubiquitous, consistent interface to handle and use error\r\nmessages on the client side.\r\n\r\nIt's small and really simple, and only depends on jQuery/UI and Underscorejs. Using it looks\r\nlike this,\r\n\r\n### JavaScript Asset\r\n\r\n```javascript\r\njQuery(function($){\r\n  App = window.App || (window.App = {})\r\n  App.Errors = \r\n    $(\"div#js-errors\")\r\n      .errors()\r\n      .data(\"errors\")\r\n\r\n  $(\"a.js-person\")\r\n    .on(\"click\", function(event){\r\n      event.preventDefault()\r\n\r\n      var personId = $(\"[data-person-id]\").data(\"person-id\"),\r\n      personURL = \"/people/\" + personId\r\n\r\n      $.ajax({\r\n        url: personURL,\r\n        // => [\"Name can't be blank\"]\r\n        data: {id: personId, person: {name: \"\"}},\r\n        type: \"put\",\r\n        error: App.Errors.handle\r\n      })\r\n    })\r\n})\r\n```\r\n\r\n### Controller\r\n\r\n```ruby\r\nclass PeopleController < ApplicationController\r\n  def show\r\n    @person = Person.find params[:id]\r\n  end\r\n\r\n  def update\r\n    @person = Person.find params[:id]\r\n    @person.update_attributes params[:person]\r\n\r\n    if @person.valid?\r\n      render :json => @person, :status => 200\r\n    else\r\n      render :json => {:errors => @person.errors.full_messages}, :status => 422\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### View\r\n\r\n```html\r\n<%= link_to @person.name, person_path(@person),\r\n  :method => \"put\",\r\n  :remote => true,\r\n  :\"data-person-id\" => @person.id,\r\n  :class => \"js-person\"\r\n%>\r\n\r\n<div id=\"js-errors\"><ul></ul></div>\r\n```\r\n\r\n## API (Usable Without #handle Callback)\r\n\r\n```javascript\r\nvar Errors = $(\"div#errors\").errors().data(\"errors\")\r\n \r\nErrors.add(\"You shall not pass!\")\r\n\r\nErrors.show()\r\n\r\nErrors.hide()\r\n\r\nErrors.reset()\r\n```\r\n\r\n## LICENSE (MIT)\r\n\r\nLICENSE file has the details.","tagline":"Client-side Errors object","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}